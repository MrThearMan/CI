name: Test

on:
  workflow_call:
    inputs:
      python-version:
        required: false
        type: string
        default: '["3.9", "3.10", "3.11"]'
      os:
        required: false
        type: string
        default: '["ubuntu-latest", "macos-latest", "windows-latest"]'
      poetry-version:
        required: false
        type: string
        default: "1.5.1"
      exclude:
        required: false
        type: string
        default: '[{"os": "none", "python-version": "none"}]'

jobs:
  test:
    name: ${{ matrix.python-version }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ${{ fromJSON(inputs.os) }}
        python-version: ${{ fromJSON(inputs.python-version) }}
        exclude: ${{ fromJSON(inputs.exclude) }}

    steps:
      - name: "Check out repository"
        uses: actions/checkout@v3

      - name: "Install poetry"
        run: pipx install "poetry==${{ inputs.poetry-version }}"

      - name: "Set up python"
        id: setup-python
        uses: actions/setup-python@v4
        with:
          cache: "poetry"
          python-version: ${{ matrix.python-version }}

      - name: "Load cached tox environment"
        uses: actions/cache@v3
        with:
          path: .tox
          key: cache-v1-python${{ steps.setup-python.outputs.python-version }}-${{ matrix.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: "Pre-test hook"
        if: ${{ hashFiles('.github/actions/pre-test/action.yml') != '' }}
        uses: ./.github/actions/pre-test

      - name: "Install dependencies"
        run: poetry install

      - name: "Run tox"
        run: poetry run tox

      - name: "Make coverage report"
        run: |
          poetry run coverage report
          poetry run coverage xml

      - name: "Post-test hook"
        if: ${{ hashFiles('.github/actions/post-test/action.yml') != '' }}
        uses: ./.github/actions/post-test

      - name: "Submit coverage"
        uses: coverallsapp/github-action@v2
        with:
          file: coverage.xml
          flag-name: ${{ steps.setup-python.outputs.python-version }}-${{ matrix.os }}
          parallel: true

  submit-coverage:
    needs: test
    runs-on: "ubuntu-latest"
    steps:
      - name: "Finnish coverage report"
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true
